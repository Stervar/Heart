# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–¥—Ü–∞
import numpy as np      # –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏
import time             # –†–∞–±–æ—Ç–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
import os               # –†–∞–±–æ—Ç–∞ —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π

def clear_screen():
    """
    –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ —Å —É—á–µ—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É cls –¥–ª—è Windows –∏ clear –¥–ª—è Unix-–ø–æ–¥–æ–±–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
    """
    os.system('cls' if os.name == 'nt' else 'clear')

def create_heart_points(scale=10):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ—á–µ–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 2D —Ñ–æ—Ä–º—ã —Å–µ—Ä–¥—Ü–∞
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ—Ä–¥—Ü–∞
    
    Args:
        scale (int): –ú–∞—Å—à—Ç–∞–± —Å–µ—Ä–¥—Ü–∞
    
    Returns:
        np.array: –ú–∞—Å—Å–∏–≤ —Ç–æ—á–µ–∫ —Å–µ—Ä–¥—Ü–∞
    """
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
    t = np.linspace(0, 2*np.pi, 100)
    
    # –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—ã —Å–µ—Ä–¥—Ü–∞
    x = scale * 16 * np.sin(t)**3
    y = scale * (13 * np.cos(t) - 5 * np.cos(2*t) - 2 * np.cos(3*t) - np.cos(4*t))
    z = np.zeros_like(x)  # –ü–ª–æ—Å–∫–æ—Å—Ç—å Z = 0 –¥–ª—è 2D –≤—Ä–∞—â–µ–Ω–∏—è
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ —Å—Ç–æ–ª–±—Ü—ã
    return np.column_stack((x, y, z))

def rotate_points(points, angle):
    """
    –í—Ä–∞—â–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –≤–æ–∫—Ä—É–≥ –æ—Å–∏ Z
    
    Args:
        points (np.array): –ú–∞—Å—Å–∏–≤ —Ç–æ—á–µ–∫
        angle (float): –£–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞
    
    Returns:
        np.array: –ü–æ–≤–µ—Ä–Ω—É—Ç—ã–µ —Ç–æ—á–∫–∏
    """
    # –ú–∞—Ç—Ä–∏—Ü–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞ –≤–æ–∫—Ä—É–≥ –æ—Å–∏ Z
    rotation_matrix = np.array([
        [np.cos(angle), -np.sin(angle), 0],
        [np.sin(angle), np.cos(angle), 0],
        [0, 0, 1]
    ])
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã –ø–æ–≤–æ—Ä–æ—Ç–∞
    return np.dot(points, rotation_matrix)

def draw_heart(points, width=60, height=30):
    """
    –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–µ—Ä–¥—Ü–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç–º–æ–¥–∑–∏
    
    Args:
        points (np.array): –¢–æ—á–∫–∏ —Å–µ—Ä–¥—Ü–∞
        width (int): –®–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞
        height (int): –í—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –ø—É—Å—Ç—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
    screen = [[' ' for _ in range(width)] for _ in range(height)]
    
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç X –∏ Y
    x = points[:, 0]
    y = points[:, 1]
    
    # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—á–µ–∫
    x = (x / np.max(np.abs(x)) * (width//3)) + width//2
    y = (y / np.max(np.abs(y)) * (height//3)) + height//2
    
    # –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ —Å–µ—Ä–¥–µ—Ü –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    heart_emojis = ['‚ù§', 'üíó', 'üíï', 'üíñ', 'üíò', 'üíù', 'üíû', 'üíì']
    
    # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–æ—á–µ–∫
    for xi, yi in zip(x, y):
        if 0 <= int(xi) < width and 0 <= int(yi) < height:
            # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —ç–º–æ–¥–∑–∏ —Å–µ—Ä–¥—Ü–∞
            screen[int(yi)][int(xi)] = np.random.choice(heart_emojis)
    
    # –í—ã–≤–æ–¥ —ç–∫—Ä–∞–Ω–∞
    for row in screen:
        print(''.join(row))

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–µ—Ä–¥—Ü–∞
    """
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ—á–µ–∫ —Å–µ—Ä–¥—Ü–∞
    heart_points = create_heart_points()
    
    # –ù–∞—á–∞–ª—å–Ω—ã–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞
    angle = 0
    
    try:
        while True:
            # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
            clear_screen()
            
            # –ü–æ–≤–æ—Ä–æ—Ç —Ç–æ—á–µ–∫
            rotated_points = rotate_points(heart_points, angle)
            
            # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–µ—Ä–¥—Ü–∞
            draw_heart(rotated_points)
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≥–ª–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞
            angle += 0.1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç—å—é –∞–Ω–∏–º–∞—Ü–∏–∏
            time.sleep(0.05)
    
    except KeyboardInterrupt:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
        print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == "__main__":
    try:
        main()  # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    except KeyboardInterrupt:
        print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")